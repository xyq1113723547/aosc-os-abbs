# Architectural targets...
if   [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    ARCH_OPTS="linux-x86_64"
elif [[ "${CROSS:-$ARCH}" = "arm64" ]]; then
    ARCH_OPTS="linux-aarch64"
elif [[ "${CROSS:-$ARCH}" = "armel" ]]; then
    ARCH_OPTS="linux-armv4"
elif [[ "${CROSS:-$ARCH}" = "armhf" ]]; then
    ARCH_OPTS="linux-armv4"
elif [[ "${CROSS:-$ARCH}" = "i486" ]]; then
    ARCH_OPTS="linux-x86"
elif [[ "${CROSS:-$ARCH}" = "loongson2f" ]]; then
    ARCH_OPTS="linux64-mips64"
elif [[ "${CROSS:-$ARCH}" = "loongson3" ]]; then
    ARCH_OPTS="linux64-mips64"
elif [[ "${CROSS:-$ARCH}" = "powerpc" ]]; then
    ARCH_OPTS="linux-ppc"
elif [[ "${CROSS:-$ARCH}" = "ppc64" ]]; then
    ARCH_OPTS="linux-ppc64"
elif [[ "${CROSS:-$ARCH}" = "ppc64el" ]]; then
    ARCH_OPTS="linux-ppc64le"
elif [[ "${CROSS:-$ARCH}" = "riscv64" ]]; then
    ARCH_OPTS="linux-generic64"
elif [[ "${CROSS:-$ARCH}" = "loongarch64" ]]; then
    ARCH_OPTS="linux-generic64"
fi


# Use on little endian platforms when GCC supports uint128_t.
# ECDH is about 2 to 4 times faster. Not enabled by default
# because Configure can't determine it. Enable it if your
# compiler defines __SIZEOF_INT128, the CPU is little endian
# and it tolerates unaligned data access.
#
# Enabling only on x86_64 (amd64) for now, following Debian.
if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    ARCH_OPTS+=" enable-ec_nistp_64_gcc_128"
fi

./Configure --prefix=/usr --openssldir=/etc/ssl --libdir=lib \
            shared zlib ${ARCH_OPTS}\
            "-Wa,--noexecstack ${CPPFLAGS} ${CFLAGS}"
make depend
make

make MANDIR=/usr/share/man MANSUFFIX=ssl DESTDIR="$PKGDIR" install

if [[ "${CROSS:-$ARCH}" = "i486" || "${CROSS:-$ARCH}" = "powerpc" ]]; then
    rm -rv "$PKGDIR"/usr/share/doc/openssl/html
fi
